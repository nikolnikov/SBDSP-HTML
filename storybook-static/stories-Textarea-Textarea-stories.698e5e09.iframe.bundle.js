/*! For license information please see stories-Textarea-Textarea-stories.698e5e09.iframe.bundle.js.LICENSE.txt */
(self.webpackChunksbdsp_html=self.webpackChunksbdsp_html||[]).push([[784],{"./src/stories/Textarea/Textarea.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BasicTextArea:()=>BasicTextArea,DisabledTextArea:()=>DisabledTextArea,RequiredTextArea:()=>RequiredTextArea,TextAreaWithError:()=>TextAreaWithError,TextAreaWithHintText:()=>TextAreaWithHintText,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Textarea_stories});var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types);const QDSTextarea=({customClasses=[],errorMessage,hasError,hintMessage,inputId,isDisabled,isRequired,label,name,onChange,placeholder,value})=>react.createElement("div",{className:classnames_default()("ds-input --textarea",customClasses,{"--disabled":isDisabled,"--error":hasError,"--required":isRequired})},react.createElement("label",{"aria-label":label,className:"ds-input__label",htmlFor:inputId},label&&react.createElement("span",null,label)),react.createElement("textarea",{className:"ds-textarea",disabled:isDisabled,id:inputId,name,placeholder,onChange,value}),errorMessage&&react.createElement("div",{className:"ds-input__error",role:"alert"},errorMessage),hintMessage&&!errorMessage&&react.createElement("div",{className:"ds-input__hint",role:"tooltip"},hintMessage));QDSTextarea.propTypes={customClasses:prop_types_default().string,errorMessage:prop_types_default().string,hasError:prop_types_default().bool,hintMessage:prop_types_default().string,inputId:prop_types_default().string.isRequired,isDisabled:prop_types_default().bool,isRequired:prop_types_default().bool,label:prop_types_default().string,name:prop_types_default().string,onChange:prop_types_default().func,placeholder:prop_types_default().string,value:prop_types_default().string};const Textarea=QDSTextarea;QDSTextarea.__docgenInfo={description:"",methods:[],displayName:"QDSTextarea",props:{customClasses:{defaultValue:{value:"[]",computed:!1},description:"",type:{name:"string"},required:!1},errorMessage:{description:"",type:{name:"string"},required:!1},hasError:{description:"",type:{name:"bool"},required:!1},hintMessage:{description:"",type:{name:"string"},required:!1},inputId:{description:"",type:{name:"string"},required:!0},isDisabled:{description:"",type:{name:"bool"},required:!1},isRequired:{description:"",type:{name:"bool"},required:!1},label:{description:"",type:{name:"string"},required:!1},name:{description:"",type:{name:"string"},required:!1},onChange:{description:"",type:{name:"func"},required:!1},placeholder:{description:"",type:{name:"string"},required:!1},value:{description:"",type:{name:"string"},required:!1}}};const Textarea_QDSTextarea=({customClasses=[],errorMessage,hasError=!1,hintMessage,inputId,isDisabled=!1,isRequired=!1,label,name,onChange,placeholder,value})=>react.createElement(Textarea,{customClasses:classnames_default()(customClasses),errorMessage,hasError,hintMessage,inputId,isDisabled,isRequired,label,name,onChange,placeholder,value});Textarea_QDSTextarea.propTypes={customClasses:prop_types_default().string,errorMessage:prop_types_default().string,hasError:prop_types_default().bool,hintMessage:prop_types_default().string,inputId:prop_types_default().string.isRequired,isDisabled:prop_types_default().bool,isRequired:prop_types_default().bool,label:prop_types_default().string,name:prop_types_default().string,onChange:prop_types_default().func,placeholder:prop_types_default().string,value:prop_types_default().string},Textarea_QDSTextarea.__docgenInfo={description:"",methods:[],displayName:"QDSTextarea",props:{customClasses:{defaultValue:{value:"[]",computed:!1},description:"",type:{name:"string"},required:!1},hasError:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},isDisabled:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},isRequired:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},errorMessage:{description:"",type:{name:"string"},required:!1},hintMessage:{description:"",type:{name:"string"},required:!1},inputId:{description:"",type:{name:"string"},required:!0},label:{description:"",type:{name:"string"},required:!1},name:{description:"",type:{name:"string"},required:!1},onChange:{description:"",type:{name:"func"},required:!1},placeholder:{description:"",type:{name:"string"},required:!1},value:{description:"",type:{name:"string"},required:!1}}};const Textarea_stories={title:"Components/Inputs/Text area",component:Textarea_QDSTextarea,parameters:{layout:"centered",actions:{disable:!0},interactions:{disable:!0}},tags:["autodocs","!dev"]},BasicTextArea={args:{inputId:"textarea-1",label:"Textarea label",onChange:()=>{}},parameters:{docs:{source:{language:"html",type:"code",code:'\n<div class="ds-input --textarea">\n    <label class="ds-input__label" for="textarea">\n        <span>Textarea label</span>\n    </label>\n    \n    <textarea class="ds-textarea" id="textarea"></textarea>\n</div>\n                '.trim()}}}},RequiredTextArea={args:{...BasicTextArea.args,inputId:"textarea-2",isRequired:!0},parameters:{docs:{source:{language:"html",type:"code",code:'\n<div class="ds-input --textarea --required">\n    <label class="ds-input__label" for="textarea">\n        <span>Textarea label</span>\n    </label>\n    \n    <textarea class="ds-textarea" id="textarea"></textarea>\n</div>\n                '.trim()}}}},DisabledTextArea={args:{...BasicTextArea.args,inputId:"textarea-3",isDisabled:!0},parameters:{docs:{source:{language:"html",type:"code",code:'\n<div class="ds-input --textarea --disabled">\n    <label class="ds-input__label" for="textarea">\n        <span>Textarea label</span>\n    </label>\n    \n    <textarea class="ds-textarea" id="textarea" disabled></textarea>\n</div>\n                '.trim()}}}},TextAreaWithError={args:{...BasicTextArea.args,errorMessage:"Error message goes here.",hasError:!0,inputId:"textarea-4"},parameters:{docs:{source:{language:"html",type:"code",code:'\n<div class="ds-input --textarea --error">\n    <label class="ds-input__label" for="textarea">\n        <span>Textarea label</span>\n    </label>\n    \n    <textarea class="ds-textarea" id="textarea"></textarea>\n\n    <div class="ds-input__error">\n        Error message goes here.\n    </span>\n</div>\n                '.trim()}}}},TextAreaWithHintText={args:{...BasicTextArea.args,hintMessage:"Hint message goes here.",inputId:"textarea-5"},parameters:{docs:{source:{language:"html",type:"code",code:'\n<div class="ds-input --textarea">\n    <label class="ds-input__label" for="textarea">\n        <span>Textarea label</span>\n    </label>\n    \n    <textarea class="ds-textarea" id="textarea"></textarea>\n\n    <div class="ds-input__hint">\n        Hint message goes here.\n    </div>\n</div>\n                '.trim()}}}},__namedExportsOrder=["BasicTextArea","RequiredTextArea","DisabledTextArea","TextAreaWithError","TextAreaWithHintText"];BasicTextArea.parameters={...BasicTextArea.parameters,docs:{...BasicTextArea.parameters?.docs,source:{originalSource:'{\n  args: {\n    inputId: \'textarea-1\',\n    label: \'Textarea label\',\n    onChange: () => {}\n  },\n  parameters: {\n    docs: {\n      source: {\n        language: \'html\',\n        type: \'code\',\n        code: `\n<div class="ds-input --textarea">\n    <label class="ds-input__label" for="textarea">\n        <span>Textarea label</span>\n    </label>\n    \n    <textarea class="ds-textarea" id="textarea"></textarea>\n</div>\n                `.trim()\n      }\n    }\n  }\n}',...BasicTextArea.parameters?.docs?.source}}},RequiredTextArea.parameters={...RequiredTextArea.parameters,docs:{...RequiredTextArea.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...BasicTextArea.args,\n    inputId: \'textarea-2\',\n    isRequired: true\n  },\n  parameters: {\n    docs: {\n      source: {\n        language: \'html\',\n        type: \'code\',\n        code: `\n<div class="ds-input --textarea --required">\n    <label class="ds-input__label" for="textarea">\n        <span>Textarea label</span>\n    </label>\n    \n    <textarea class="ds-textarea" id="textarea"></textarea>\n</div>\n                `.trim()\n      }\n    }\n  }\n}',...RequiredTextArea.parameters?.docs?.source}}},DisabledTextArea.parameters={...DisabledTextArea.parameters,docs:{...DisabledTextArea.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...BasicTextArea.args,\n    inputId: \'textarea-3\',\n    isDisabled: true\n  },\n  parameters: {\n    docs: {\n      source: {\n        language: \'html\',\n        type: \'code\',\n        code: `\n<div class="ds-input --textarea --disabled">\n    <label class="ds-input__label" for="textarea">\n        <span>Textarea label</span>\n    </label>\n    \n    <textarea class="ds-textarea" id="textarea" disabled></textarea>\n</div>\n                `.trim()\n      }\n    }\n  }\n}',...DisabledTextArea.parameters?.docs?.source}}},TextAreaWithError.parameters={...TextAreaWithError.parameters,docs:{...TextAreaWithError.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...BasicTextArea.args,\n    errorMessage: \'Error message goes here.\',\n    hasError: true,\n    inputId: \'textarea-4\'\n  },\n  parameters: {\n    docs: {\n      source: {\n        language: \'html\',\n        type: \'code\',\n        code: `\n<div class="ds-input --textarea --error">\n    <label class="ds-input__label" for="textarea">\n        <span>Textarea label</span>\n    </label>\n    \n    <textarea class="ds-textarea" id="textarea"></textarea>\n\n    <div class="ds-input__error">\n        Error message goes here.\n    </span>\n</div>\n                `.trim()\n      }\n    }\n  }\n}',...TextAreaWithError.parameters?.docs?.source}}},TextAreaWithHintText.parameters={...TextAreaWithHintText.parameters,docs:{...TextAreaWithHintText.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...BasicTextArea.args,\n    hintMessage: \'Hint message goes here.\',\n    inputId: \'textarea-5\'\n  },\n  parameters: {\n    docs: {\n      source: {\n        language: \'html\',\n        type: \'code\',\n        code: `\n<div class="ds-input --textarea">\n    <label class="ds-input__label" for="textarea">\n        <span>Textarea label</span>\n    </label>\n    \n    <textarea class="ds-textarea" id="textarea"></textarea>\n\n    <div class="ds-input__hint">\n        Hint message goes here.\n    </div>\n</div>\n                `.trim()\n      }\n    }\n  }\n}',...TextAreaWithHintText.parameters?.docs?.source}}}},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes="",i=0;i<arguments.length;i++){var arg=arguments[i];arg&&(classes=appendClass(classes,parseValue(arg)))}return classes}function parseValue(arg){if("string"==typeof arg||"number"==typeof arg)return arg;if("object"!=typeof arg)return"";if(Array.isArray(arg))return classNames.apply(null,arg);if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]"))return arg.toString();var classes="";for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&(classes=appendClass(classes,key));return classes}function appendClass(value,newClass){return newClass?value?value+" "+newClass:value+newClass:value}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}function emptyFunctionWithReset(){}emptyFunctionWithReset.resetWarningCache=emptyFunction,module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bigint:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,elementType:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim,checkPropTypes:emptyFunctionWithReset,resetWarningCache:emptyFunction};return ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"}}]);