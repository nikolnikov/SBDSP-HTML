/*! For license information please see stories-Checkbox-Checkbox-stories.6cbaed07.iframe.bundle.js.LICENSE.txt */
(self.webpackChunksbdsp_html=self.webpackChunksbdsp_html||[]).push([[34],{"./src/stories/Checkbox/Checkbox.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CheckedCheckbox:()=>CheckedCheckbox,DefaultCheckbox:()=>DefaultCheckbox,DisabledCheckbox:()=>DisabledCheckbox,IndeterminateCheckbox:()=>IndeterminateCheckbox,RequiredCheckbox:()=>RequiredCheckbox,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Checkbox_stories});var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types);const QDSCheckbox=({inputId,label,name,isChecked:initialChecked,customClasses=[],isDisabled,isIndeterminate,isRequired,onChange,value})=>{const[isChecked,setIsChecked]=(0,react.useState)(!!initialChecked);return react.createElement("label",{className:classnames_default()("ds-input__checkbox",customClasses,{"--disabled":isDisabled,"--indeterminate":isIndeterminate,"--required":isRequired}),htmlFor:inputId,"aria-label":label},react.createElement("input",{disabled:isDisabled,id:inputId,name,type:"checkbox",onChange:event=>{const newChecked=event.target.checked;setIsChecked(newChecked),onChange&&onChange(newChecked)},value,checked:isChecked}),react.createElement("span",null),label)};QDSCheckbox.propTypes={inputId:prop_types_default().string,label:prop_types_default().string,name:prop_types_default().string,isChecked:prop_types_default().bool,customClasses:prop_types_default().string,isDisabled:prop_types_default().bool,isIndeterminate:prop_types_default().bool,isRequired:prop_types_default().bool,onChange:prop_types_default().func,value:prop_types_default().string};const Checkbox=QDSCheckbox;QDSCheckbox.__docgenInfo={description:"",methods:[],displayName:"QDSCheckbox",props:{customClasses:{defaultValue:{value:"[]",computed:!1},description:"",type:{name:"string"},required:!1},inputId:{description:"",type:{name:"string"},required:!1},label:{description:"",type:{name:"string"},required:!1},name:{description:"",type:{name:"string"},required:!1},isChecked:{description:"",type:{name:"bool"},required:!1},isDisabled:{description:"",type:{name:"bool"},required:!1},isIndeterminate:{description:"",type:{name:"bool"},required:!1},isRequired:{description:"",type:{name:"bool"},required:!1},onChange:{description:"",type:{name:"func"},required:!1},value:{description:"",type:{name:"string"},required:!1}}};const Checkbox_QDSCheckbox=({inputId,label,name,isChecked=!1,customClasses=[],isDisabled=!1,isIndeterminate=!1,isRequired=!1,onChange,value})=>react.createElement(Checkbox,{inputId,label,name,isChecked,customClasses:classnames_default()(customClasses),isDisabled,isIndeterminate,isRequired,onChange,value});Checkbox_QDSCheckbox.propTypes={inputId:prop_types_default().string,label:prop_types_default().string,name:prop_types_default().string,isChecked:prop_types_default().bool,customClasses:prop_types_default().string,isDisabled:prop_types_default().bool,isIndeterminate:prop_types_default().bool,isRequired:prop_types_default().bool,onChange:prop_types_default().func,value:prop_types_default().string},Checkbox_QDSCheckbox.__docgenInfo={description:"",methods:[],displayName:"QDSCheckbox",props:{isChecked:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},customClasses:{defaultValue:{value:"[]",computed:!1},description:"",type:{name:"string"},required:!1},isDisabled:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},isIndeterminate:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},isRequired:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},inputId:{description:"",type:{name:"string"},required:!1},label:{description:"",type:{name:"string"},required:!1},name:{description:"",type:{name:"string"},required:!1},onChange:{description:"",type:{name:"func"},required:!1},value:{description:"",type:{name:"string"},required:!1}}};const Checkbox_stories={title:"Components/Checkbox",component:Checkbox_QDSCheckbox,parameters:{layout:"centered",actions:{disable:!0},interactions:{disable:!0}},tags:["autodocs","!dev"]},DefaultCheckbox={args:{label:"Checkbox label"},parameters:{docs:{source:{language:"html",type:"code",code:'\n<label class="ds-input__checkbox" for="checkbox">\n    <input id="checkbox" type="checkbox">\n    <span></span>\n    Checkbox label\n</label>\n                '.trim()}}}},RequiredCheckbox={args:{inputId:"checkbox-2",isRequired:!0,label:"Checkbox label",name:"checkbox-2",onChange:()=>{},value:"checkbox-2"},parameters:{docs:{source:{language:"html",type:"code",code:'\n<label class="ds-input__checkbox --required" for="checkbox">\n    <input id="checkbox" type="checkbox">\n    <span></span>\n    Checkbox label\n</label>\n                '.trim()}}}},DisabledCheckbox={args:{inputId:"checkbox-3",isDisabled:!0,label:"Checkbox label",name:"checkbox-3",onChange:()=>{},value:"checkbox-3"},parameters:{docs:{source:{language:"html",type:"code",code:'\n<label class="ds-input__checkbox --disabled" for="checkbox">\n    <input id="checkbox" type="checkbox">\n    <span></span>\n    Checkbox label\n</label>\n                '.trim()}}}},CheckedCheckbox={args:{inputId:"checkbox-4",isChecked:!0,label:"Checkbox label",name:"checkbox-4",onChange:()=>{},value:"checkbox-4"},parameters:{docs:{source:{language:"html",type:"code",code:'\n<label class="ds-input__checkbox" for="checkbox">\n    <input id="checkbox" type="checkbox" checked>\n    <span></span>\n    Checkbox label\n</label>\n                '.trim()}}}},IndeterminateCheckbox={args:{inputId:"checkbox-5",isIndeterminate:!0,label:"Default checkbox",name:"checkbox-5",onChange:()=>{},value:"checkbox-5"},parameters:{docs:{source:{language:"html",type:"code",code:'\n<label class="ds-input__checkbox --indeterminate" for="checkbox">\n    <input id="checkbox" type="checkbox">\n    <span></span>\n    Checkbox label\n</label>\n                '.trim()}}}},__namedExportsOrder=["DefaultCheckbox","RequiredCheckbox","DisabledCheckbox","CheckedCheckbox","IndeterminateCheckbox"];DefaultCheckbox.parameters={...DefaultCheckbox.parameters,docs:{...DefaultCheckbox.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: \'Checkbox label\'\n  },\n  parameters: {\n    docs: {\n      source: {\n        language: \'html\',\n        type: \'code\',\n        code: `\n<label class="ds-input__checkbox" for="checkbox">\n    <input id="checkbox" type="checkbox">\n    <span></span>\n    Checkbox label\n</label>\n                `.trim()\n      }\n    }\n  }\n}',...DefaultCheckbox.parameters?.docs?.source}}},RequiredCheckbox.parameters={...RequiredCheckbox.parameters,docs:{...RequiredCheckbox.parameters?.docs,source:{originalSource:"{\n  args: {\n    inputId: 'checkbox-2',\n    isRequired: true,\n    label: 'Checkbox label',\n    name: 'checkbox-2',\n    onChange: () => {},\n    value: 'checkbox-2'\n  },\n  parameters: {\n    docs: {\n      source: {\n        language: 'html',\n        type: 'code',\n        code: `\n<label class=\"ds-input__checkbox --required\" for=\"checkbox\">\n    <input id=\"checkbox\" type=\"checkbox\">\n    <span></span>\n    Checkbox label\n</label>\n                `.trim()\n      }\n    }\n  }\n}",...RequiredCheckbox.parameters?.docs?.source}}},DisabledCheckbox.parameters={...DisabledCheckbox.parameters,docs:{...DisabledCheckbox.parameters?.docs,source:{originalSource:"{\n  args: {\n    inputId: 'checkbox-3',\n    isDisabled: true,\n    label: 'Checkbox label',\n    name: 'checkbox-3',\n    onChange: () => {},\n    value: 'checkbox-3'\n  },\n  parameters: {\n    docs: {\n      source: {\n        language: 'html',\n        type: 'code',\n        code: `\n<label class=\"ds-input__checkbox --disabled\" for=\"checkbox\">\n    <input id=\"checkbox\" type=\"checkbox\">\n    <span></span>\n    Checkbox label\n</label>\n                `.trim()\n      }\n    }\n  }\n}",...DisabledCheckbox.parameters?.docs?.source}}},CheckedCheckbox.parameters={...CheckedCheckbox.parameters,docs:{...CheckedCheckbox.parameters?.docs,source:{originalSource:"{\n  args: {\n    inputId: 'checkbox-4',\n    isChecked: true,\n    label: 'Checkbox label',\n    name: 'checkbox-4',\n    onChange: () => {},\n    value: 'checkbox-4'\n  },\n  parameters: {\n    docs: {\n      source: {\n        language: 'html',\n        type: 'code',\n        code: `\n<label class=\"ds-input__checkbox\" for=\"checkbox\">\n    <input id=\"checkbox\" type=\"checkbox\" checked>\n    <span></span>\n    Checkbox label\n</label>\n                `.trim()\n      }\n    }\n  }\n}",...CheckedCheckbox.parameters?.docs?.source}}},IndeterminateCheckbox.parameters={...IndeterminateCheckbox.parameters,docs:{...IndeterminateCheckbox.parameters?.docs,source:{originalSource:"{\n  args: {\n    inputId: 'checkbox-5',\n    isIndeterminate: true,\n    label: 'Default checkbox',\n    name: 'checkbox-5',\n    onChange: () => {},\n    value: 'checkbox-5'\n  },\n  parameters: {\n    docs: {\n      source: {\n        language: 'html',\n        type: 'code',\n        code: `\n<label class=\"ds-input__checkbox --indeterminate\" for=\"checkbox\">\n    <input id=\"checkbox\" type=\"checkbox\">\n    <span></span>\n    Checkbox label\n</label>\n                `.trim()\n      }\n    }\n  }\n}",...IndeterminateCheckbox.parameters?.docs?.source}}}},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes="",i=0;i<arguments.length;i++){var arg=arguments[i];arg&&(classes=appendClass(classes,parseValue(arg)))}return classes}function parseValue(arg){if("string"==typeof arg||"number"==typeof arg)return arg;if("object"!=typeof arg)return"";if(Array.isArray(arg))return classNames.apply(null,arg);if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]"))return arg.toString();var classes="";for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&(classes=appendClass(classes,key));return classes}function appendClass(value,newClass){return newClass?value?value+" "+newClass:value+newClass:value}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}function emptyFunctionWithReset(){}emptyFunctionWithReset.resetWarningCache=emptyFunction,module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bigint:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,elementType:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim,checkPropTypes:emptyFunctionWithReset,resetWarningCache:emptyFunction};return ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"}}]);